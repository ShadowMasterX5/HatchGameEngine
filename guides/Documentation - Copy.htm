<html>
    <head>
        <title>Hatch Game Engine Documentation</title>

        <style>
            body {
                background-color: white;
                font-family: sans-serif;
                margin: 64px;
            }
            codefrag {
                display: inline;
                margin: 0px;
                font-family: monospace;
            }
            a {
                text-decoration: none;
                color: #4141F2;
            }
            .function_list {
                font-family: monospace;
                margin-top: 0.5em;
            }
            .function_list li {
                margin-top: 0.125em;
                margin-bottom: 0.125em;
            }
        </style>
    </head>
    <body>
        <div style="position: fixed; margin-top: -32px; margin-left: -96px; width: 100%; text-align: right;"><a href="#Reference_top">Back to top</a></div>
        <h1 id="Reference_top">Hatch Game Engine Documentation</h1>

        <p>All of this is subject to change, and function links currently go nowhere. If more information is needed, ask about Goblin.</p>

        <ul>
            <li><a href="#Reference_Resources">Resources</a></li>
            <li><a href="#Reference_Draw">Draw</a></li>
            <li><a href="#Reference_Shader">Shader</a></li>
            <li><a href="#Reference_Texture">Texture</a></li>
            <li><a href="#Reference_Ease">Ease</a></li>
            <li><a href="#Reference_Math">Math</a></li>
            <li><a href="#Reference_Number">Number</a></li>
            <li><a href="#Reference_Window">Window</a></li>
            <li><a href="#Reference_Display">Display</a></li>
            <li><a href="#Reference_View">View</a></li>
            <li><a href="#Reference_Input">Input</a></li>
            <li><a href="#Reference_Touch">Touch</a></li>
            <li><a href="#Reference_Instance">Instance</a></li>
            <li><a href="#Reference_TileCollision">TileCollision</a></li>
            <li><a href="#Reference_Music">Music</a></li>
            <li><a href="#Reference_Sound">Sound</a></li>
            <li><a href="#Reference_Device">Device</a></li>
        </ul>

        <!-- Resources -->
        <p id="Reference_Resources">
            <h2>Resources</h2>

            <p>
            Resources are the main assets to be used to interface with the game. By using the
            function for each resource type, that resource is loaded to be used within the scope
            that is specified for it. Each function returns a index to be used for any other function
            that uses it. If you have a resource that you only want to be loaded during the current scene,
            use <codefrag>SCOPE_SCENE</codefrag> for the <codefrag>scope</codefrag> parameter, otherwise use <codefrag>SCOPE_GAME</codefrag>
            for resources you can have loaded across all scenes.
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Resources_LoadSprite">Resources.LoadSprite(filename, scope)</a></li>
                <li><a href="#Reference_Resources_LoadImage">Resources.LoadImage(filename, scope)</a></li>
                <li><a href="#Reference_Resources_LoadShader">Resources.LoadShader(fragment_filename, vertex_filename, scope)</a></li>
                <li><a href="#Reference_Resources_LoadModel">Resources.LoadModel(filename, scope)</a></li>
                <li><a href="#Reference_Resources_LoadMusic">Resources.LoadMusic(filename, scope)</a></li>
                <li><a href="#Reference_Resources_LoadSound">Resources.LoadSound(filename, scope)</a></li>
            </ul>
        </p>

        <!-- Draw -->
        <p id="Reference_Draw">
            <h2>Draw</h2>

            <p>
            Anything you want to see on screen is provided by one of the below functions.
            </p>

            <i>Constants:</i>
            <ul class="function_list">
                <li>BlendMode_NORMAL</li>
                <li>BlendMode_ADD</li>
                <li>BlendMode_MAX</li>
                <li>BlendMode_SUBTRACT</li>

                <li>BlendFactor_ZERO</li>
                <li>BlendFactor_ONE</li>
                <li>BlendFactor_SRC_COLOR</li>
                <li>BlendFactor_INV_SRC_COLOR</li>
                <li>BlendFactor_SRC_ALPHA</li>
                <li>BlendFactor_INV_SRC_ALPHA</li>
                <li>BlendFactor_DST_COLOR</li>
                <li>BlendFactor_INV_DST_COLOR</li>
                <li>BlendFactor_DST_ALPHA</li>
                <li>BlendFactor_INV_DST_ALPHA</li>
            </ul>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Draw_Sprite">Draw.Sprite(sprite_index, animation_index, frame, x, y)</a></li>
                <li><a href="#Reference_Draw_Image">Draw.Image(image_index, x, y)</a></li>
                <!-- <li><a href="#Reference_Draw_Text">Draw.Text(string, x, y)</a></li> -->
                <li><a href="#Reference_Draw_Texture">Draw.Texture(texture_index, x, y)</a></li>
                <li><a href="#Reference_Draw_TextureSized">Draw.TextureSized(texture_index, x, y, w, h)</a></li>
                <li><a href="#Reference_Draw_TexturePart">Draw.TexturePart(texture_index, source_x, source_y, source_w, source_h, x, y, w, h)</a></li>
                <li><a href="#Reference_Draw_SetBlendColor">Draw.SetBlendColor(r, g, b, a)</a></li>
                <li><a href="#Reference_Draw_SetBlendMode">Draw.SetBlendMode(mode)</a></li>
                <li><a href="#Reference_Draw_SetBlendFactor">Draw.SetBlendFactor(source, dest)</a></li>
                <li><a href="#Reference_Draw_SetBlendFactorExtended">Draw.SetBlendFactorExtended(sourceColor, destColor, sourceAlpha, destAlpha)</a></li>
                <li><a href="#Reference_Draw_Line">Draw.Line(x1, y1, x2, y2)</a></li>
                <li><a href="#Reference_Draw_Circle">Draw.Circle(x, y, rad)</a></li>
                <li><a href="#Reference_Draw_Ellipse">Draw.Ellipse(x, y, w, h)</a></li>
                <li><a href="#Reference_Draw_Rectangle">Draw.Rectangle(x, y, w, h)</a></li>
                <li><a href="#Reference_Draw_CircleStroke">Draw.CircleStroke(x, y, rad)</a></li>
                <li><a href="#Reference_Draw_EllipseStroke">Draw.EllipseStroke(x, y, w, h)</a></li>
                <li><a href="#Reference_Draw_RectangleStroke">Draw.RectangleStroke(x, y, w, h)</a></li>
                <li><a href="#Reference_Draw_Save">Draw.Save()</a></li>
                <li><a href="#Reference_Draw_Translate">Draw.Translate(x, y, z)</a></li>
                <li><a href="#Reference_Draw_Rotate">Draw.Rotate(x, y, z)</a></li>
                <li><a href="#Reference_Draw_Scale">Draw.Scale(x, y, z)</a></li>
                <li><a href="#Reference_Draw_Restore">Draw.Restore()</a></li>
                <li><a href="#Reference_Draw_Clear">Draw.Clear()</a></li>
                <li><a href="#Reference_Draw_SetTextureTarget">Draw.SetTextureTarget(texture_index)</a></li>
                <li><a href="#Reference_Draw_ResetTextureTarget">Draw.ResetTextureTarget()</a></li>
            </ul>
        </p>

        <!-- Shader -->
        <p id="Reference_Shader">
            <h2>Shader</h2>

            <p>
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Shader_Set">Shader.Set(shader_index)</a></li>
                <li><a href="#Reference_Shader_GetUniform">Shader.GetUniform(shader_index, uniform_name)</a></li>
                <li><a href="#Reference_Shader_SetUniformI">Shader.SetUniformI(uniform_index, value, ...)</a></li>
                <li><a href="#Reference_Shader_SetUniformF">Shader.SetUniformF(uniform_index, value, ...)</a></li>
                <li><a href="#Reference_Shader_SetUniform3x3">Shader.SetUniform3x3(uniform_index, value1, ..., value9)</a></li>
                <li><a href="#Reference_Shader_SetUniform4x4">Shader.SetUniform4x4(uniform_index, value1, ..., value16)</a></li>
                <li><a href="#Reference_Shader_SetUniformTexture">Shader.SetUniformTexture(uniform_index, texture_index, slot)</a></li>
                <li><a href="#Reference_Shader_Unset">Shader.Unset()</a></li>
            </ul>
        </p>

        <!-- Texture -->
        <p id="Reference_Texture">
            <h2>Texture</h2>

            <p>
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Texture_FromSprite">Texture.FromSprite(sprite_index)</a></li>
                <li><a href="#Reference_Texture_Create">Texture.Create(w, h)</a></li>
            </ul>
        </p>

        <!-- Ease -->
        <p id="Reference_Ease">
            <h2>Ease</h2>

            <p>
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Ease_InSine">Ease.InSine(normalized_time)</a></li>
                <li><a href="#Reference_Ease_OutSine">Ease.OutSine(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InOutSine">Ease.InOutSine(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InQuad">Ease.InQuad(normalized_time)</a></li>
                <li><a href="#Reference_Ease_OutQuad">Ease.OutQuad(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InOutQuad">Ease.InOutQuad(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InCubic">Ease.InCubic(normalized_time)</a></li>
                <li><a href="#Reference_Ease_OutCubic">Ease.OutCubic(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InOutCubic">Ease.InOutCubic(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InQuart">Ease.InQuart(normalized_time)</a></li>
                <li><a href="#Reference_Ease_OutQuart">Ease.OutQuart(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InOutQuart">Ease.InOutQuart(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InQuint">Ease.InQuint(normalized_time)</a></li>
                <li><a href="#Reference_Ease_OutQuint">Ease.OutQuint(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InOutQuint">Ease.InOutQuint(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InExpo">Ease.InExpo(normalized_time)</a></li>
                <li><a href="#Reference_Ease_OutExpo">Ease.OutExpo(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InOutExpo">Ease.InOutExpo(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InCirc">Ease.InCirc(normalized_time)</a></li>
                <li><a href="#Reference_Ease_OutCirc">Ease.OutCirc(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InOutCirc">Ease.InOutCirc(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InBack">Ease.InBack(normalized_time)</a></li>
                <li><a href="#Reference_Ease_OutBack">Ease.OutBack(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InOutBack">Ease.InOutBack(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InElastic">Ease.InElastic(normalized_time)</a></li>
                <li><a href="#Reference_Ease_OutElastic">Ease.OutElastic(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InOutElastic">Ease.InOutElastic(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InBounce">Ease.InBounce(normalized_time)</a></li>
                <li><a href="#Reference_Ease_OutBounce">Ease.OutBounce(normalized_time)</a></li>
                <li><a href="#Reference_Ease_InOutBounce">Ease.InOutBounce(normalized_time)</a></li>
                <li><a href="#Reference_Ease_Triangle">Ease.Triangle(normalized_time)</a></li>
            </ul>
        </p>

        <!-- Math -->
        <p id="Reference_Math">
            <h2>Math</h2>

            <p>
            Math.
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Math_Cos">Math.Cos(value)</a></li>
                <li><a href="#Reference_Math_Sin">Math.Sin(value)</a></li>
                <li><a href="#Reference_Math_Atan">Math.Atan(y, x)</a></li>
                <li><a href="#Reference_Math_Distance">Math.Distance(x1, y1, x2, y2)</a></li>
                <li><a href="#Reference_Math_Direction">Math.Direction(x1, y1, x2, y2)</a></li>
                <li><a href="#Reference_Math_Abs">Math.Abs(value)</a></li>
                <li><a href="#Reference_Math_Min">Math.Min(value1, value2)</a></li>
                <li><a href="#Reference_Math_Max">Math.Max(value1, value2)</a></li>
                <li><a href="#Reference_Math_Clamp">Math.Clamp(value, min, max)</a></li>
                <li><a href="#Reference_Math_Sign">Math.Sign(value)</a></li>
                <li><a href="#Reference_Math_Random">Math.Random()</a></li>
                <li><a href="#Reference_Math_RandomMax">Math.RandomMax(max)</a></li>
                <li><a href="#Reference_Math_RandomRange">Math.RandomRange(min, max)</a></li>
                <li><a href="#Reference_Math_Floor">Math.Floor(value)</a></li>
                <li><a href="#Reference_Math_Ceil">Math.Ceil(value)</a></li>
                <li><a href="#Reference_Math_Round">Math.Round(value)</a></li>
            </ul>
        </p>

        <!-- Number -->
        <p id="Reference_Number">
            <h2>Number</h2>

            <p>
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Number_ToString">Number.ToString(value)</a></li>
                <li><a href="#Reference_Number_AsInteger">Number.AsInteger(value)</a></li>
                <li><a href="#Reference_Number_AsDecimal">Number.AsDecimal(value)</a></li>
            </ul>
        </p>

        <!-- Window -->
        <p id="Reference_Window">
            <h2>Window</h2>

            <p>
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Window_SetSize">Window.SetSize(width, height)</a></li>
                <li><a href="#Reference_Window_GetWidth">Window.GetWidth()</a></li>
                <li><a href="#Reference_Window_GetHeight">Window.GetHeight()</a></li>
            </ul>
        </p>

        <!-- Display -->
        <p id="Reference_Display">
            <h2>Display</h2>

            <p>
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Display_GetWidth">Display.GetWidth()</a></li>
                <li><a href="#Reference_Display_GetHeight">Display.GetHeight()</a></li>
            </ul>
        </p>

        <!-- View -->
        <p id="Reference_View">
            <h2>View</h2>

            <p>
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_View_SetSize">View.SetSize(view_index, width, height)</a></li>
                <li><a href="#Reference_View_GetWidth">View.GetWidth(view_index)</a></li>
                <li><a href="#Reference_View_GetHeight">View.GetHeight(view_index)</a></li>
            </ul>
        </p>

        <!-- Input -->
        <p id="Reference_Input">
            <h2>Input</h2>

            <p>
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Input_GetMouseX">Input.GetMouseX()</a></li>
                <li><a href="#Reference_Input_GetMouseY">Input.GetMouseY()</a></li>
                <li><a href="#Reference_Input_IsMouseButtonDown">Input.IsMouseButtonDown(button)</a></li>
                <li><a href="#Reference_Input_IsMouseButtonPressed">Input.IsMouseButtonPressed(button)</a></li>
                <li><a href="#Reference_Input_IsMouseButtonReleased">Input.IsMouseButtonReleased(button)</a></li>
                <li><a href="#Reference_Input_IsKeyDown">Input.IsKeyDown(key)</a></li>
                <li><a href="#Reference_Input_IsKeyPressed">Input.IsKeyPressed(key)</a></li>
                <li><a href="#Reference_Input_IsKeyReleased">Input.IsKeyReleased(key)</a></li>
                <li><a href="#Reference_Input_GetControllerAttached">Input.GetControllerAttached(controller_index)</a></li>
                <li><a href="#Reference_Input_GetControllerHat">Input.GetControllerHat(controller_index, hat_index)</a></li>
                <li><a href="#Reference_Input_GetControllerAxis">Input.GetControllerAxis(controller_index, axis_index)</a></li>
                <li><a href="#Reference_Input_GetControllerButton">Input.GetControllerButton(controller_index, button_index)</a></li>
                <li><a href="#Reference_Input_GetControllerName">Input.GetControllerName(controller_index)</a></li>
            </ul>
        </p>

        <!-- Touch -->
        <p id="Reference_Touch">
            <h2>Touch</h2>

            <p>
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Touch_IsDown">Touch.IsDown(touch_index)</a></li>
                <li><a href="#Reference_Touch_IsPressed">Touch.IsPressed(touch_index)</a></li>
                <li><a href="#Reference_Touch_IsReleased">Touch.IsReleased(touch_index)</a></li>
                <li><a href="#Reference_Touch_GetX">Touch.GetX(touch_index)</a></li>
                <li><a href="#Reference_Touch_GetY">Touch.GetY(touch_index)</a></li>
            </ul>
        </p>

        <!-- Instance -->
        <p id="Reference_Instance">
            <h2>Instance</h2>

            <p>
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Instance_Create">Instance.Create(object_name, x, y)</a></li>
                <li><a href="#Reference_Instance_GetNth">Instance.GetNth(object_name, n)</a></li>
                <li><a href="#Reference_Instance_GetCount">Instance.GetCount(object_name)</a></li>
            </ul>
        </p>

        <!-- TileCollision -->
        <p id="Reference_TileCollision">
            <h2>TileCollision</h2>

            <p>
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_TileCollision_Point">TileCollision.Point(x, y)</a></li>
                <li><a href="#Reference_TileCollision_PointExtended">TileCollision.PointExtended(x, y, collision_plane, collision_side)</a></li>
            </ul>
        </p>

        <!-- Music -->
        <p id="Reference_Music">
            <h2>Music</h2>

            <p>
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Music_Play">Music.Play(music_index)</a></li>
                <li><a href="#Reference_Music_Stop">Music.Stop(music_index)</a></li>
                <li><a href="#Reference_Music_Loop">Music.Loop(music_index, do_loop, loop_start_in_samples)</a></li>
                <li><a href="#Reference_Music_IsPlaying">Music.IsPlaying(music_index)</a></li>
            </ul>
        </p>

        <!-- Sound -->
        <p id="Reference_Sound">
            <h2>Sound</h2>

            <p>
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Sound_Play">Sound.Play(sound_index)</a></li>
                <li><a href="#Reference_Sound_Stop">Sound.Stop(sound_index)</a></li>
                <li><a href="#Reference_Sound_StopAll">Sound.StopAll()</a></li>
            </ul>
        </p>

        <!-- Device -->
        <p id="Reference_Device">
            <h2>Device</h2>

            <p>
                <codefrag>Platform_Windows</codefrag><br/>
                <codefrag>Platform_MacOSX</codefrag><br/>
                <codefrag>Platform_Linux</codefrag><br/>
                <codefrag>Platform_Ubuntu</codefrag><br/>
                <codefrag>Platform_Switch</codefrag><br/>
                <codefrag>Platform_iOS</codefrag><br/>
                <codefrag>Platform_Android</codefrag><br/>
                <codefrag>Platform_Default</codefrag>
            </p>

            <i>Functions:</i>
            <ul class="function_list">
                <li><a href="#Reference_Device_GetPlatform">Device.GetPlatform()</a></li>
            </ul>
        </p>

        <!-- <!\-\-\- ([A-Za-z0-9]+)\.([A-Za-z0-9]+) \-\-> -->
        <!-- <li><a href="#Reference_$1_$2">$1.$2</a></li> -->
    </body>
</html>
